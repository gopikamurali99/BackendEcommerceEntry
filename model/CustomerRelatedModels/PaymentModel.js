import mongoose from 'mongoose';

const { Schema } = mongoose;

const itemSchema = new Schema({
    
    productId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'Product',
        required: true,
    },
    quantity: {
        type: Number,
        required: true,
        min: 1,
    },
    price: {
        type: Number,
        required: true,
    },
    name: String,
    images: [{ type: String }],
    sizes: [{ type: String }],
    totalAmount: {
        type: Number,
        required: true,
        default: function() {
            return this.quantity * this.price;
        },
    }
});

const userPaymentSchema = new Schema({
    userId: {
        type: Schema.Types.ObjectId,
        ref: 'Customer',  
        required: true,
    },
    paymentIntentId: {
        type: String,  // The ID generated by Stripe for this payment intent
        required: true,
    },
    amount: {
        type: Number,  
        required: true,
    },
    currency: {
        type: String,
        default: "inr",  
        required: true,
    },
    paymentMethod: {
        type: String,
        enum: ["card"], 
        default: "card",
        required: true,
    },
    status: {
        type: String,
        enum: [
            'succeeded',
            'pending',
            'failed',
            'requires_payment_method',
            'requires_confirmation',   
            'requires_action',          
            'processing',               
            'canceled'                  
        ],  // Payment status
        default: 'pending',
        required: true,
    },
    transactionId: {
        type: String,  // Transaction ID returned from Stripe after the payment
        required: true,
    },
    createdAt: {
        type: Date,
        default: Date.now,  // Store when the payment was created
    },
    items: [itemSchema],
}, { timestamps: true });

const UserPaymentModel = mongoose.model('UserPaymentModel', userPaymentSchema);
export default UserPaymentModel;